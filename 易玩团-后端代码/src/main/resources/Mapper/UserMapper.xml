<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ZMetalHeartY.demo.Mapper.UserMapper" >
      <resultMap id="BaseResultMap" type="ZMetalHeartY.demo.Entity.User" >
        <id column="userid" property="userid" jdbcType="INTEGER" />
        <result column="openid" property="openid" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="VARCHAR" />
          <result column="role" property="role" jdbcType="VARCHAR" />
        <result column="img" property="img" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="ag_id" property="ag_id" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
      </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="ZMetalHeartY.demo.Entity.User" extends="BaseResultMap">
    <association property="flatformAdminGroup" javaType="ZMetalHeartY.demo.Entity.FlatformAdminGroup">
        <result column="ag_id" property="ag_id"/>
        <result column="ag_name" property="ag_name"/>
    </association>

  </resultMap>


    <insert id="insert" parameterType="ZMetalHeartY.demo.Entity.User" >
        insert into flatform_account
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="openid != null" >
                openid,
            </if>
            <if test="nickname != null" >
                nickname,
            </if>
            <if test="sex != null" >
                sex,
            </if>
            <if test="img != null" >
                img,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                `password`,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="ag_id != null" >
                ag_id,
            </if>
            <if test="status != null" >
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="openid != null" >
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null" >
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex=#{sex,jdbcType=VARCHAR},
            </if>
            <if test="img != null" >
                img=#{img,jdbcType=VARCHAR},
            </if>
            <if test="username != null" >
                username=#{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="ag_id != null" >
                ag_id = #{ag_id,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                `status` = #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="ZMetalHeartY.demo.Entity.User" >
        update user
        <set >
            <if test="openid != null" >
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null" >
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex=#{sex,jdbcType=VARCHAR},
            </if>
            <if test="img != null" >
                img=#{img,jdbcType=VARCHAR},
            </if>
            <if test="username != null" >
                username=#{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="ag_id != null" >
                ag_id = #{ag_id,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                `status` = #{status,jdbcType=VARCHAR},
            </if>

        </set>
        where userid = #{userid,jdbcType=INTEGER}
    </update>

    <select id="getRolesByUserid" parameterType="Integer" resultType="String">
        SELECT role FROM `user` INNER JOIN flatform_admin_group ON `user`.ag_id = flatform_admin_group.ag_id WHERE userid = #{userid}
    </select>

    <insert id="register" parameterType="ZMetalHeartY.demo.Entity.User">
        insert into user(openid,nickname,sex,img,username,password,ag_id,phone) values(#{openid},#{nickname},#{sex},#{img},#{username},#{password},#{ag_id},#{phone})
    </insert>

    <select id="findByAccount" parameterType="String" resultMap="BaseResultMap">
        select * from `user` where username = #{account} and `status` = 0;
    </select>

    <update id="delete" parameterType="Integer">
        update user set status = 1 where userid = #{userid}
    </update>

    <select id="getByID" parameterType="Integer" resultMap="BaseResultMap">
        select * from `user` where userid = #{userid}
    </select>

  <select id="findAll" parameterType="ZMetalHeartY.demo.Entity.User" resultMap="ResultMapWithBLOBs">
        select `user`.userid, `user`.username, `user`.`password`, `user`.phone,`user`.status, `user`.ag_id,`user`.status,flatformAdminGroup.ag_id,flatformAdminGroup.ag_name
        from `user`,flatform_admin_group as flatformAdminGroup
        <where>
            `user`.ag_id = flatformAdminGroup.ag_id and `user`.status = 0
          <if test="userid!=null and userid!=''">
            and `user`.userid = #{userid}
          </if>
          <if test="username!=null and username!=''">
            and `user`.username like concat('%',#{username},'%')
          </if>
          <if test="phone!=null and phone!=''">
             and `user`.phone like concat('%',#{phone},'%')
          </if>
        </where>

  </select>
  <select id="count" parameterType="ZMetalHeartY.demo.Entity.User" resultType="Integer">
        select count(*) from `user`,flatform_admin_group as flatformAdminGroup
        <where>
          flatformAdminGroup.ag_id = `user`.ag_id and `user`.status = 0
          <if test="userid!=null and userid!=''">
            and `user`.userid = #{userid}
          </if>
          <if test="username!=null and username!=''">
           and username like concat('%',#{username},'%')
          </if>
          <if test="phone!=null and phone!=''">
            and phone like concat('%',#{phone},'%')
          </if>
        </where>

  </select>

  <select id="getByUsername" parameterType="String" resultType="ZMetalHeartY.demo.Entity.User">
    SELECT * FROM user where username = #{username}
  </select>


</mapper>