<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ZMetalHeartY.demo.Mapper.NewsMapper">
    <resultMap id="BaseResultMap" type="ZMetalHeartY.demo.Entity.News">
        <id column="n_id" property="nId" jdbcType="INTEGER"/>
        <result column="i_id" property="iId" jdbcType="INTEGER"/>
        <result column="from_user_id" property="fromUserId" jdbcType="INTEGER"/>
        <result column="to_user_id" property="toUserId" jdbcType="INTEGER"/>
        <result column="to_comment_id" property="toCommentId" jdbcType="INTEGER"/>
        <result column="to_news_id" property="toNewsId" jdbcType="INTEGER"/>
        <result column="n_create_time" property="nCreateTime" jdbcType="TIMESTAMP"/>
        <result column="n_msg" property="nMsg" jdbcType="VARCHAR"/>
        <result column="n_type" property="nType" jdbcType="INTEGER"/>
        <result column="n_is_read" property="nIsRead" jdbcType="INTEGER"/>

        <association property="frontUser" javaType="ZMetalHeartY.demo.Entity.FrontUser">
            <result column="fu_id" property="fuId"/>
            <result column="fu_openid" property="fuOpenid"/>
            <result column="fu_nickname" property="fuNickname"/>
            <result column="fu_sex" property="fuSex"/>
            <result column="fu_img" property="fuImg"/>
            <result column="fu_phone" property="fuPhone"/>
            <result column="fu_credit" property="fuCredit"/>
            <result column="fu_note" property="fuNote"/>
            <result column="fu_username" property="fuUsername"/>
        </association>

        <association property="toFrontUser" javaType="ZMetalHeartY.demo.Entity.FrontUser">
            <result column="fuf_fu_id" property="fuId"/>
            <result column="fuf_fu_openid" property="fuOpenid"/>
            <result column="fuf_fu_nickname" property="fuNickname"/>
            <result column="fuf_fu_sex" property="fuSex"/>
            <result column="fuf_fu_img" property="fuImg"/>
            <result column="fuf_fu_phone" property="fuPhone"/>
            <result column="fuf_fu_credit" property="fuCredit"/>
            <result column="fuf_fu_note" property="fuNote"/>
            <result column="fuf_fu_username" property="fuUsername"/>
        </association>

        <association property="issueComment" javaType="ZMetalHeartY.demo.Entity.IssueComment">

            <result column="ic_id" property="icId"/>
            <result column="fu_id" property="fuId"/>
            <result column="i_d" property="iId"/>
            <result column="ic_msg" property="icMsg"/>

        </association>

        <association property="issue" javaType="ZMetalHeartY.demo.Entity.Issue">
            <result column="i_id" property="iId"/>
            <result column="fu_id" property="fuId"/>
            <result column="i_type" property="iType"/>
            <result column="i_title" property="iTitle"/>
            <result column="i_address" property="iAddress"/>
            <result column="i_create_time" property="iCreateTime"/>
            <result column="i_sex" property="iSex"/>
            <result column="i_resume" property="iResume"/>
            <result column="i_details" property="iDetails"/>
            <result column="i_position_start" property="iPositionStart"/>
            <result column="i_position_end" property="iPositionEnd"/>
            <result column="i_img" property="iImg"/>
            <result column="i_status" property="iStatus"/>
            <result column="i_people_number" property="iPeopleNumber"/>
            <result column="i_start_time" property="iStartTime"/>
            <result column="i_end_time" property="iEndTime"/>
            <result column="i_audio" property="iAudio"/>
        </association>

    </resultMap>
    <sql id="Base_Column_List">
        news.n_id, news.i_id, news.from_user_id, news.to_user_id, news.to_comment_id, news.to_news_id,
        news.n_create_time, news.n_msg, news.n_type, news.n_is_read
    </sql>
    <sql id="Front_User_Column_List">
        front_user.fu_id, front_user.fu_openid, front_user.fu_nickname, front_user.fu_sex,
        front_user.fu_img, front_user.fu_phone, front_user.fu_credit, front_user.fu_note,
        front_user.fu_username
    </sql>
    <sql id="To_Front_User_Column_List">
        front_user2.fu_id fuf_fu_id, front_user2.fu_openid fuf_fu_openid, front_user2.fu_nickname fuf_fu_nickname, front_user2.fu_sex fuf_fu_sex,
        front_user2.fu_img fuf_fu_img, front_user2.fu_phone fuf_fu_phone, front_user2.fu_credit fuf_fu_credit, front_user2.fu_note fuf_fu_note,
        front_user2.fu_username fuf_fu_username
    </sql>
    <sql id="Issue_Column_List">
        issue.i_id, issue.fu_id, issue.i_type, issue.i_title,
        issue.i_address, issue.i_create_time, issue.i_sex, issue.i_resume,
        issue.i_details, issue.i_position_start, issue.i_position_end,
        issue.i_img, issue.i_status, issue.i_people_number,
        issue.i_start_time,issue.i_end_time,issue.i_audio
    </sql>
    <sql id="Issue_Comment_Column_List">
        issue_comment.i_id, issue_comment.fu_id, issue_comment.i_type, issue_comment.i_title,
        issue_comment.i_address, issue_comment.i_create_time, issue_comment.i_sex, issue_comment.i_resume,
        issue_comment.i_details, issue_comment.i_position_start, issue_comment.i_position_end,
        issue_comment.i_img, issue_comment.i_status, issue_comment.i_people_number
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from news
        where n_id = #{nId,jdbcType=INTEGER}
    </select>
    <select id="selectAllByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Front_User_Column_List"/>
        ,
        <include refid="To_Front_User_Column_List"/>
        ,
        <include refid="Issue_Column_List"/>
        from news
        left join front_user on front_user.fu_id = news.from_user_id
        left join front_user as front_user2 on front_user2.fu_id = news.to_user_id
        left join issue on issue.i_id = news.i_id
        <where>
            <if test="toUserId!=null and toUserId!=''">
                and news.to_user_id = #{toUserId,jdbcType=INTEGER}
            </if>
            <if test="fromUserId!=null and fromUserId!=''">
                and news.from_user_id = #{fromUserId,jdbcType=INTEGER}
            </if>
            <if test="nType!=null and nType!=''">
                and news.n_type = #{nType,jdbcType=INTEGER}
            </if>
        </where>

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from news
        where n_id = #{nId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="ZMetalHeartY.demo.Entity.News">
        insert into news (n_id, i_id, from_user_id,
                          to_user_id, to_comment_id, to_news_id,
                          n_create_time, n_msg, n_type,
                          n_is_read)
        values (#{nId,jdbcType=INTEGER}, #{iId,jdbcType=INTEGER}, #{fromUserId,jdbcType=INTEGER},
                #{toUserId,jdbcType=INTEGER}, #{toCommentId,jdbcType=INTEGER}, #{toNewsId,jdbcType=INTEGER},
                #{nCreateTime,jdbcType=TIMESTAMP}, #{nMsg,jdbcType=VARCHAR}, #{nType,jdbcType=INTEGER},
                #{nIsRead,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="ZMetalHeartY.demo.Entity.News">
        insert into news
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nId != null">
                n_id,
            </if>
            <if test="iId != null">
                i_id,
            </if>
            <if test="fromUserId != null">
                from_user_id,
            </if>
            <if test="toUserId != null">
                to_user_id,
            </if>
            <if test="toCommentId != null">
                to_comment_id,
            </if>
            <if test="toNewsId != null">
                to_news_id,
            </if>
            <if test="nCreateTime != null">
                n_create_time,
            </if>
            <if test="nMsg != null">
                n_msg,
            </if>
            <if test="nType != null">
                n_type,
            </if>
            <if test="nIsRead != null">
                n_is_read,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nId != null">
                #{nId,jdbcType=INTEGER},
            </if>
            <if test="iId != null">
                #{iId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null">
                #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null">
                #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="toCommentId != null">
                #{toCommentId,jdbcType=INTEGER},
            </if>
            <if test="toNewsId != null">
                #{toNewsId,jdbcType=INTEGER},
            </if>
            <if test="nCreateTime != null">
                #{nCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="nMsg != null">
                #{nMsg,jdbcType=VARCHAR},
            </if>
            <if test="nType != null">
                #{nType,jdbcType=INTEGER},
            </if>
            <if test="nIsRead != null">
                #{nIsRead,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="ZMetalHeartY.demo.Entity.News">
        update news
        <set>
            <if test="iId != null">
                i_id = #{iId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null">
                from_user_id = #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null">
                to_user_id = #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="toCommentId != null">
                to_comment_id = #{toCommentId,jdbcType=INTEGER},
            </if>
            <if test="toNewsId != null">
                to_news_id = #{toNewsId,jdbcType=INTEGER},
            </if>
            <if test="nCreateTime != null">
                n_create_time = #{nCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="nMsg != null">
                n_msg = #{nMsg,jdbcType=VARCHAR},
            </if>
            <if test="nType != null">
                n_type = #{nType,jdbcType=INTEGER},
            </if>
            <if test="nIsRead != null">
                n_is_read = #{nIsRead,jdbcType=INTEGER},
            </if>
        </set>
        where n_id = #{nId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="ZMetalHeartY.demo.Entity.News">
        update news
        set i_id          = #{iId,jdbcType=INTEGER},
            from_user_id  = #{fromUserId,jdbcType=INTEGER},
            to_user_id    = #{toUserId,jdbcType=INTEGER},
            to_comment_id = #{toCommentId,jdbcType=INTEGER},
            to_news_id    = #{toNewsId,jdbcType=INTEGER},
            n_create_time = #{nCreateTime,jdbcType=TIMESTAMP},
            n_msg         = #{nMsg,jdbcType=VARCHAR},
            n_type        = #{nType,jdbcType=INTEGER},
            n_is_read     = #{nIsRead,jdbcType=INTEGER}
        where n_id = #{nId,jdbcType=INTEGER}
    </update>
</mapper>